<?xml version="1.0" encoding="utf-8"?>
<configurations lcid_type="UserExe" show_language_selector="False" language_selector_title="Select migration step" language_selector_ok="OK" language_selector_cancel="Cancel" configuration_no_match_message="" ui_level="full" fileversion="1.0.001.0" productversion="1.0.001.0" log_enabled="False" log_file="C:\AD_Migration\Migration.txt">
  <schema version="2.4.99.0" generator="dotNetInstaller InstallerEditor" />
  <fileattributes>
    <fileattribute name="CompanyName" value="Becton, Dickinson and Company" />
    <fileattribute name="FileDescription" value="ES Server Migration 1.0" />
    <fileattribute name="Comments" value="{C9ACD255-6289-44D6-8974-CD6F9742C3DD}" />
  </fileattributes>
  <configuration dialog_caption="ES Server Migration 1.0" dialog_message="The following components will be installed:" dialog_message_uninstall="" dialog_bitmap="#APPPATH\banner.bmp" skip_caption="Skip" install_caption="Install" uninstall_caption="Uninstall" cancel_caption="Close" status_installed=" (Installed)" status_notinstalled="" failed_exec_command_continue="Failed to install %s." installation_completed="All PCI components installed successfully!" uninstallation_completed="PCI uninstalled successfully!" installation_none="All PCI components are already installed!" uninstallation_none="PCI is not installed!" installing_component_wait="Executing %s. Wait, this operation could take some time ..." uninstalling_component_wait="Uninstalling %s. Wait, this operation could take some time ..." reboot_required="To continue the installation you must restart your computer. Restart now?" must_reboot_required="False" dialog_otherinfo_caption="" dialog_otherinfo_link="" complete_command="" complete_command_silent="" complete_command_basic="" wait_for_complete_command="True" prompt_for_optional_components="False" auto_close_if_installed="True" auto_close_on_error="True" reload_on_error="True" dialog_show_installed="True" dialog_show_uninstalled="True" dialog_show_required="True" cab_dialog_message="%s" cab_cancelled_message="" cab_dialog_caption="" cab_path="#TEMPPATH\#GUID" cab_path_autodelete="True" dialog_default_button="cancel" dialog_position="" dialog_components_list_position="" dialog_message_position="" dialog_bitmap_position="" dialog_otherinfo_link_position="" dialog_osinfo_position="" dialog_install_button_position="" dialog_cancel_button_position="" dialog_skip_button_position="" auto_start="False" auto_continue_on_reboot="True" reboot_cmd="" show_progress_dialog="True" show_cab_dialog="True" disable_wow64_fs_redirection="False" administrator_required="True" administrator_required_message="PCI installation requires administration rights." type="install" lcid_filter="" language_id="" language="ES Server Migration Backup" os_filter="" os_filter_min="" os_filter_max="" processor_architecture_filter="" supports_install="True" supports_uninstall="False">
    <component command="powershell.exe -executionpolicy bypass -windowstyle Normal -command &quot;&amp; { &amp; '#CABPATH\Scripts\Backup_Files.ps1' -Logging -ScriptCleanup -LogName '#APPPATH' ; Exit $LASTEXITCODE}&quot;" command_silent="" command_basic="" uninstall_command="" uninstall_command_silent="" uninstall_command_basic="" working_directory="" returncodes_success="" returncodes_reboot="" hide_window="False" disable_wow64_fs_redirection="True" execution_method="CreateProcess" id="Information Backup" display_name="Information Backup" uninstall_display_name="" os_filter="" os_filter_min="" os_filter_max="" os_filter_lcid="" type="cmd" installcompletemessage="" uninstallcompletemessage="" mustreboot="False" reboot_required="" must_reboot_required="False" failed_exec_command_continue="" allow_continue_on_error="False" default_continue_on_error="False" required_install="True" required_uninstall="True" selected_install="True" selected_uninstall="True" note="This component will perform a caomputer backup" processor_architecture_filter="" status_installed="" status_notinstalled="" supports_install="True" supports_uninstall="False" show_progress_dialog="True" show_cab_dialog="True">
      <embedfile sourcefilepath="#APPPATH\Scripts\Backup_Files.ps1" targetfilepath="Scripts\Backup_Files.ps1" />
      <installedcheck path="C:\Migration_Backup" type="check_directory" description="Installed Check" />
    </component>
    <component command="powershell.exe -executionpolicy bypass -windowstyle hidden -command &quot;&amp; { &amp; '#CABPATH\Scripts\Change-DNSRecords.ps1' -Logging -ScriptCleanup -LogName '#APPPATH\Logs\Migration.log' ; Exit $LASTEXITCODE}&quot;" command_silent="" command_basic="" uninstall_command="" uninstall_command_silent="" uninstall_command_basic="" working_directory="" returncodes_success="0" returncodes_reboot="" hide_window="True" disable_wow64_fs_redirection="True" execution_method="CreateProcess" id="Change DNS Records" display_name="Change DNS Records" uninstall_display_name="" os_filter="" os_filter_min="" os_filter_max="" os_filter_lcid="" type="cmd" installcompletemessage="" uninstallcompletemessage="" mustreboot="False" reboot_required="" must_reboot_required="False" failed_exec_command_continue="" allow_continue_on_error="False" default_continue_on_error="False" required_install="True" required_uninstall="True" selected_install="True" selected_uninstall="True" note="This component will change de DNS records to communicate with bot domains" processor_architecture_filter="" status_installed="" status_notinstalled="" supports_install="True" supports_uninstall="False" show_progress_dialog="True" show_cab_dialog="True">
      <embedfile sourcefilepath="#APPPATH\Scripts\Change-DNSRecords.ps1" targetfilepath="Scripts\Change-DNSRecords.ps1" />
      <installedcheck path="Software\NST\Domain Migration" fieldname="ChangeDNSRecords" fieldvalue="Completed" defaultvalue="False" fieldtype="REG_SZ" comparison="exists" rootkey="HKEY_LOCAL_MACHINE" wowoption="WOW64_64" type="check_registry_value" description="Installed Check" />
    </component>
    <component command="powershell.exe -executionpolicy bypass -windowstyle hidden -command &quot;&amp; { &amp; '#CABPATH\Scripts\Create-LocalUser.ps1' -Logging -ScriptCleanup -LogName '#APPPATH\Logs\Migration.log' ; Exit $LASTEXITCODE}&quot;" command_silent="" command_basic="" uninstall_command="" uninstall_command_silent="" uninstall_command_basic="" working_directory="" returncodes_success="0" returncodes_reboot="" hide_window="True" disable_wow64_fs_redirection="True" execution_method="CreateProcess" id="Create Local User" display_name="Create Local User" uninstall_display_name="" os_filter="" os_filter_min="" os_filter_max="" os_filter_lcid="" type="cmd" installcompletemessage="" uninstallcompletemessage="" mustreboot="False" reboot_required="" must_reboot_required="False" failed_exec_command_continue="" allow_continue_on_error="False" default_continue_on_error="False" required_install="True" required_uninstall="True" selected_install="True" selected_uninstall="True" note="This component will create a local user to help in the migration process" processor_architecture_filter="" status_installed="" status_notinstalled="" supports_install="True" supports_uninstall="False" show_progress_dialog="True" show_cab_dialog="True">
      <embedfile sourcefilepath="#APPPATH\Scripts\Create-LocalUser.ps1" targetfilepath="Scripts\Create-LocalUser.ps1" />
      <installedcheck path="Software\NST\Domain Migration" fieldname="AddNSTMig" fieldvalue="Completed" defaultvalue="False" fieldtype="REG_SZ" comparison="exists" rootkey="HKEY_LOCAL_MACHINE" wowoption="WOW64_64" type="check_registry_value" description="Installed Check" />
    </component>
    <component command="powershell.exe -executionpolicy bypass -windowstyle Normal -command &quot;&amp; { &amp; '#CABPATH\Scripts\RemoveFrom-Domain.ps1' -Logging -ScriptCleanup -LogName '#APPPATH\Logs\Migration.log' ; Exit $LASTEXITCODE}&quot;" command_silent="" command_basic="" uninstall_command="" uninstall_command_silent="" uninstall_command_basic="" working_directory="" returncodes_success="0" returncodes_reboot="" hide_window="False" disable_wow64_fs_redirection="True" execution_method="CreateProcess" id="Remove Computer from Domain" display_name="Remove Computer from Domain" uninstall_display_name="" os_filter="" os_filter_min="" os_filter_max="" os_filter_lcid="" type="cmd" installcompletemessage="" uninstallcompletemessage="" mustreboot="False" reboot_required="" must_reboot_required="False" failed_exec_command_continue="" allow_continue_on_error="False" default_continue_on_error="False" required_install="True" required_uninstall="True" selected_install="True" selected_uninstall="True" note="This component will remove the computer from the domain Corp.NearsShoreTechnology.com" processor_architecture_filter="" status_installed="" status_notinstalled="" supports_install="True" supports_uninstall="False" show_progress_dialog="True" show_cab_dialog="True">
      <embedfile sourcefilepath="#APPPATH\Scripts\RemoveFrom-Domain.ps1" targetfilepath="Scripts\RemoveFrom-Domain.ps1" />
      <installedcheck path="Software\NST\Domain Migration" fieldname="RemovedFromOldDomain" fieldvalue="Completed" defaultvalue="False" fieldtype="REG_SZ" comparison="exists" rootkey="HKEY_LOCAL_MACHINE" wowoption="WOW64_64" type="check_registry_value" description="Installed Check" />
    </component>
    <component command="powershell.exe -executionpolicy bypass -windowstyle Normal -command &quot;&amp; { &amp; '#CABPATH\Scripts\AddTo-Domain.ps1' -Logging -ScriptCleanup -LogName '#APPPATH\Logs\Migration.log' ; Exit $LASTEXITCODE}&quot;" command_silent="" command_basic="" uninstall_command="" uninstall_command_silent="" uninstall_command_basic="" working_directory="" returncodes_success="0" returncodes_reboot="" hide_window="False" disable_wow64_fs_redirection="True" execution_method="CreateProcess" id="Add Computer to Domain" display_name="Add Computer to Domain" uninstall_display_name="" os_filter="" os_filter_min="" os_filter_max="" os_filter_lcid="" type="cmd" installcompletemessage="" uninstallcompletemessage="" mustreboot="False" reboot_required="" must_reboot_required="False" failed_exec_command_continue="" allow_continue_on_error="False" default_continue_on_error="False" required_install="True" required_uninstall="True" selected_install="True" selected_uninstall="True" note="This component will add the computer to the domain corp.nearshoretc.com" processor_architecture_filter="" status_installed="" status_notinstalled="" supports_install="True" supports_uninstall="False" show_progress_dialog="True" show_cab_dialog="True">
      <embedfile sourcefilepath="#APPPATH\Scripts\AddTo-Domain.ps1" targetfilepath="Scripts\AddTo-Domain.ps1" />
      <installedcheck path="Software\NST\Domain Migration" fieldname="AddedToNewDomain" fieldvalue="Completed" defaultvalue="False" fieldtype="REG_SZ" comparison="exists" rootkey="HKEY_LOCAL_MACHINE" wowoption="WOW64_64" type="check_registry_value" description="Installed Check" />
    </component>
    <component command="powershell.exe -executionpolicy bypass -windowstyle hidden -Sta -command &quot;&amp; { &amp; '#CABPATH\Scripts\Get-UserInformation.ps1' -Logging -ScriptCleanup -LogName '#APPPATH\Logs\Migration.log' ; Exit $LASTEXITCODE}&quot;" command_silent="" command_basic="" uninstall_command="" uninstall_command_silent="" uninstall_command_basic="" working_directory="" returncodes_success="0" returncodes_reboot="" hide_window="False" disable_wow64_fs_redirection="True" execution_method="CreateProcess" id="User Information" display_name="User Information" uninstall_display_name="" os_filter="" os_filter_min="" os_filter_max="" os_filter_lcid="" type="cmd" installcompletemessage="" uninstallcompletemessage="" mustreboot="False" reboot_required="" must_reboot_required="False" failed_exec_command_continue="" allow_continue_on_error="False" default_continue_on_error="False" required_install="True" required_uninstall="True" selected_install="True" selected_uninstall="True" note="This component will gather from the user the AD account that is going to be configured in the computer" processor_architecture_filter="" status_installed="" status_notinstalled="" supports_install="True" supports_uninstall="False" show_progress_dialog="True" show_cab_dialog="True">
      <embedfile sourcefilepath="#APPPATH\Scripts\Get-UserInformation.ps1" targetfilepath="Scripts\Get-UserInformation.ps1" />
      <installedcheck path="Software\NST\Domain Migration" fieldname="AD_User" fieldvalue="" defaultvalue="False" fieldtype="REG_SZ" comparison="exists" rootkey="HKEY_LOCAL_MACHINE" wowoption="WOW64_64" type="check_registry_value" description="Installed Check" />
    </component>
    <component command="powershell.exe -executionpolicy bypass -windowstyle hidden -Sta -command &quot;&amp; { &amp; '#CABPATH\Scripts\Add-UserToAdministratorsGroup.ps1' -Logging -ScriptCleanup -LogName '#APPPATH\Logs\Migration.log' ; Exit $LASTEXITCODE}&quot;" command_silent="" command_basic="" uninstall_command="" uninstall_command_silent="" uninstall_command_basic="" working_directory="" returncodes_success="0" returncodes_reboot="" hide_window="False" disable_wow64_fs_redirection="True" execution_method="CreateProcess" id="Add AD user to local Administrators group" display_name="Add AD user to local Administrators group" uninstall_display_name="" os_filter="" os_filter_min="" os_filter_max="" os_filter_lcid="" type="cmd" installcompletemessage="" uninstallcompletemessage="" mustreboot="False" reboot_required="" must_reboot_required="False" failed_exec_command_continue="" allow_continue_on_error="False" default_continue_on_error="False" required_install="True" required_uninstall="True" selected_install="True" selected_uninstall="True" note="This component will add the AD user to the local administrators group" processor_architecture_filter="" status_installed="" status_notinstalled="" supports_install="True" supports_uninstall="False" show_progress_dialog="True" show_cab_dialog="True">
      <embedfile sourcefilepath="#APPPATH\Scripts\Add-UserToAdministratorsGroup.ps1" targetfilepath="Scripts\Add-UserToAdministratorsGroup.ps1" />
      <installedcheck path="Software\NST\Domain Migration" fieldname="AddToAdminGroup" fieldvalue="Completed" defaultvalue="False" fieldtype="REG_SZ" comparison="exists" rootkey="HKEY_LOCAL_MACHINE" wowoption="WOW64_64" type="check_registry_value" description="Installed Check" />
    </component>
    <component command="powershell.exe -executionpolicy bypass -windowstyle hidden -command &quot;&amp; { &amp; '#CABPATH\Scripts\Set-AutoLogon.ps1' -Logging -ScriptCleanup -AutoLogonCount 1 -AutoLogonDomain corp.nearshoretc.com -LogName '#APPPATH\Logs\Migration.log' ; Exit $LASTEXITCODE}&quot;" command_silent="" command_basic="" uninstall_command="" uninstall_command_silent="" uninstall_command_basic="" working_directory="" returncodes_success="0" returncodes_reboot="" hide_window="False" disable_wow64_fs_redirection="True" execution_method="CreateProcess" id="Set Autologon information" display_name="Set Autologon information" uninstall_display_name="" os_filter="" os_filter_min="" os_filter_max="" os_filter_lcid="" type="cmd" installcompletemessage="" uninstallcompletemessage="" mustreboot="True" reboot_required="The computer will restart to apply all the changed from the migration" must_reboot_required="False" failed_exec_command_continue="" allow_continue_on_error="False" default_continue_on_error="False" required_install="True" required_uninstall="True" selected_install="True" selected_uninstall="True" note="This component will add  information to log the new user automatically for the first time" processor_architecture_filter="" status_installed="" status_notinstalled="" supports_install="True" supports_uninstall="False" show_progress_dialog="True" show_cab_dialog="True">
      <embedfile sourcefilepath="#APPPATH\Scripts\Set-AutoLogon.ps1" targetfilepath="Scripts\Set-AutoLogon.ps1" />
      <installedcheck path="Software\NST\Domain Migration" fieldname="AutoLogon" fieldvalue="Completed" defaultvalue="False" fieldtype="REG_SZ" comparison="exists" rootkey="HKEY_LOCAL_MACHINE" wowoption="WOW64_64" type="check_registry_value" description="Installed Check" />
    </component>
    <component command="powershell.exe -executionpolicy bypass -windowstyle hidden -command &quot;&amp; { &amp; '#CABPATH\Scripts\Reverting-MigrationSettings.ps1' -Logging -ScriptCleanup -LogName '#APPPATH\Logs\Migration.log' ; Exit $LASTEXITCODE}&quot;" command_silent="" command_basic="" uninstall_command="" uninstall_command_silent="" uninstall_command_basic="" working_directory="" returncodes_success="0" returncodes_reboot="" hide_window="False" disable_wow64_fs_redirection="True" execution_method="CreateProcess" id="Reverting Migration Settings" display_name="Reverting Migration Settings" uninstall_display_name="" os_filter="" os_filter_min="" os_filter_max="" os_filter_lcid="" type="cmd" installcompletemessage="" uninstallcompletemessage="" mustreboot="False" reboot_required="" must_reboot_required="False" failed_exec_command_continue="" allow_continue_on_error="False" default_continue_on_error="False" required_install="True" required_uninstall="True" selected_install="True" selected_uninstall="True" note="This component will revert the settings added by the migration tool" processor_architecture_filter="" status_installed="" status_notinstalled="" supports_install="True" supports_uninstall="False" show_progress_dialog="True" show_cab_dialog="True">
      <embedfile sourcefilepath="#APPPATH\Scripts\Reverting-MigrationSettings.ps1" targetfilepath="Scripts\Reverting-MigrationSettings.ps1" />
      <installedcheck path="Software\NST\Domain Migration" fieldname="RevertSettings" fieldvalue="Completed" defaultvalue="False" fieldtype="REG_SZ" comparison="exists" rootkey="HKEY_LOCAL_MACHINE" wowoption="WOW64_64" type="check_registry_value" description="Installed Check" />
    </component>
    <component command="powershell.exe -executionpolicy bypass -windowstyle hidden -command &quot;&amp; { &amp; '#CABPATH\Scripts\Add-InfoToAD.ps1' -Logging -ScriptCleanup -LogName '#APPPATH\Logs\Migration.log' ; Exit $LASTEXITCODE}&quot;" command_silent="" command_basic="" uninstall_command="" uninstall_command_silent="" uninstall_command_basic="" working_directory="" returncodes_success="0" returncodes_reboot="" hide_window="False" disable_wow64_fs_redirection="True" execution_method="CreateProcess" id="Add Success Info to AD" display_name="Add Success Info to AD" uninstall_display_name="" os_filter="" os_filter_min="" os_filter_max="" os_filter_lcid="" type="cmd" installcompletemessage="" uninstallcompletemessage="" mustreboot="False" reboot_required="" must_reboot_required="False" failed_exec_command_continue="" allow_continue_on_error="True" default_continue_on_error="False" required_install="True" required_uninstall="True" selected_install="True" selected_uninstall="True" note="This component will add the computer and user name to the computer object in AD (Description Field)" processor_architecture_filter="" status_installed="" status_notinstalled="" supports_install="True" supports_uninstall="False" show_progress_dialog="True" show_cab_dialog="True">
      <embedfile sourcefilepath="#APPPATH\Scripts\Add-InfoToAD.ps1" targetfilepath="Scripts\Add-InfoToAD.ps1" />
      <installedcheck path="Software\NST\Domain Migration" fieldname="SuccessInfo" fieldvalue="Completed" defaultvalue="False" fieldtype="REG_SZ" comparison="exists" rootkey="HKEY_LOCAL_MACHINE" wowoption="WOW64_64" type="check_registry_value" description="Installed Check" />
    </component>
  </configuration>
</configurations>